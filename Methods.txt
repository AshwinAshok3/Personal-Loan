1: make a conda base project initialization

2: make a python environment
# first I had to create a conda python environment
cmd : "create -p venv python==3.13 -y"

3: activate conda
# conda activate venv/

4: initialize the git
# git init

5: add readme file if exists else no need

6: adding the remote configuration for git
# git set-url origin https://<token-api-key>@github.com/<username>/<repo>

7: fetch, pull | merge , commit , push
# git fetch origin
# git merge origin/main --allow-unrelated-histories
# git push -u origin main

8: made 2 files
# requirements.txt : all the required packages that I will need for this project
# setup.py : initializing those packages and managing the errors

9: add details for the requirement.txt
# fill the setup.py

10: make a source folder that holds the source and core code for the project

11: add a '__init__.py' for initializing our main code

12: working with setup.py code for requirements
# making setup.py as the

13: install requirements.txt
# pip3 install -r requirements.txt

14: wrong python venv
# I have trying to use tensorflow for this but however the latest version of tensorflow
# does not support python 3.13 which i have already installed instead i have to downgrade it
# Deactivate if active
conda deactivate
# Delete the old venv folder
Remove-Item -Recurse -Force .\venv
# Create new conda environment with Python 3.12
conda create -p venv python=3.12 -y
# Activate it
conda activate .\venv
# Install dependencies
pip install -r requirements.txt


15: Git push all the changes


16: create a components folder for handling the dependencies

17: create exceptions and loggers file for exception and error handling

18:
























